{"ast":null,"code":"var _jsxFileName = \"C:\\\\Work\\\\Prj\\\\stageus_homework\\\\src\\\\components\\\\Nav.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport NavItem from \"./NavItem\";\nimport \"./Nav.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Nav = ({\n  isOpen,\n  isSelected,\n  setIsSelected\n}) => {\n  _s();\n  // 사이드 바 메뉴 목록\n  let [closedMenuListSet, setClosedMenuListSet] = React.useState([]);\n  let [openMenuListsSet, setOpenMenuListsSet] = React.useState({});\n  React.useEffect(() => {\n    fetchData();\n  }, []);\n\n  // 네비바 항목 선택 및 클릭 이벤트\n  const clickNavItemEvent = idx => setIsSelected(idx);\n\n  // 로컬 JSON 데이터 불러오기\n  const fetchData = async () => {\n    try {\n      const response = await fetch('/data.json');\n      const data = await response.json();\n      setClosedMenuListSet(data.closedMenuList);\n      setOpenMenuListsSet(data.openMenuLists);\n    } catch (error) {\n      console.error('데이터를 불러오는 중 오류 발생: ', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"nav\", {\n      children: isOpen ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"nav-open\",\n          children: Object.values(openMenuListsSet).map((group, groupIndex) => {\n            return /*#__PURE__*/_jsxDEV(\"ul\", {\n              className: \"active\",\n              children: [group.title !== \"\" && /*#__PURE__*/_jsxDEV(\"h3\", {\n                children: group.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 44,\n                columnNumber: 57\n              }, this), Object.values(group.contents).map((menu, index) => /*#__PURE__*/_jsxDEV(NavItem, {\n                onClick: () => {\n                  clickNavItemEvent(index);\n                },\n                item: menu,\n                isSelected: isSelected === index\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 47,\n                columnNumber: 57\n              }, this)), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 50,\n                columnNumber: 49\n              }, this)]\n            }, groupIndex, true, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 45\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"scroll\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"nav-closed\",\n        children: closedMenuListSet.map((item, index) => /*#__PURE__*/_jsxDEV(NavItem, {\n          onClick: () => {\n            clickNavItemEvent(index);\n          },\n          item: item,\n          isSelected: isSelected === index\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 41\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 29\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this), isOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 25\n    }, this)]\n  }, void 0, true);\n};\n_s(Nav, \"/8oe2UUY1zN4xcb5GAZjhfb/Xl4=\");\n_c = Nav;\nexport default Nav;\nvar _c;\n$RefreshReg$(_c, \"Nav\");","map":{"version":3,"names":["React","NavItem","jsxDEV","_jsxDEV","Fragment","_Fragment","Nav","isOpen","isSelected","setIsSelected","_s","closedMenuListSet","setClosedMenuListSet","useState","openMenuListsSet","setOpenMenuListsSet","useEffect","fetchData","clickNavItemEvent","idx","response","fetch","data","json","closedMenuList","openMenuLists","error","console","children","className","Object","values","map","group","groupIndex","title","fileName","_jsxFileName","lineNumber","columnNumber","contents","menu","index","onClick","item","_c","$RefreshReg$"],"sources":["C:/Work/Prj/stageus_homework/src/components/Nav.js"],"sourcesContent":["import React from \"react\";\r\nimport NavItem from \"./NavItem\";\r\nimport \"./Nav.css\";\r\n\r\nconst Nav = ({isOpen, isSelected, setIsSelected}) => {\r\n\r\n    // 사이드 바 메뉴 목록\r\n    let [closedMenuListSet, setClosedMenuListSet] = React.useState([]);\r\n    let [openMenuListsSet, setOpenMenuListsSet] = React.useState({});\r\n\r\n    React.useEffect(() => {\r\n        fetchData();\r\n    }, []);\r\n    \r\n    // 네비바 항목 선택 및 클릭 이벤트\r\n    const clickNavItemEvent = (idx) => setIsSelected(idx);\r\n\r\n    // 로컬 JSON 데이터 불러오기\r\n    const fetchData = async () => {\r\n        try {\r\n            const response = await fetch('/data.json');\r\n            const data = await response.json();\r\n            setClosedMenuListSet(data.closedMenuList);\r\n            setOpenMenuListsSet(data.openMenuLists);\r\n        } catch (error) {\r\n            console.error('데이터를 불러오는 중 오류 발생: ', error);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <nav>\r\n                {\r\n                    isOpen\r\n                        ?\r\n                            <>\r\n                            <div className=\"nav-open\">\r\n                                {\r\n                                    Object.values(openMenuListsSet).map((group, groupIndex) => {\r\n                                        return (\r\n                                            <ul className=\"active\" key={groupIndex}>\r\n                                                {\r\n                                                    group.title !== \"\" &&\r\n                                                        <h3>{group.title}</h3>\r\n                                                }{\r\n                                                    Object.values(group.contents).map((menu, index) => (\r\n                                                        <NavItem onClick={() => {clickNavItemEvent(index)}} item={menu} isSelected={isSelected === index} />\r\n                                                    ))\r\n                                                }\r\n                                                <hr />\r\n                                            </ul>\r\n                                        )\r\n                                    })\r\n                                }\r\n                            </div>\r\n                            <div className=\"scroll\"></div>\r\n                            </>\r\n                        :\r\n                            <ul className=\"nav-closed\">\r\n                                {\r\n                                    closedMenuListSet.map((item, index) => \r\n                                        <NavItem onClick={() => {clickNavItemEvent(index)}} item={item} isSelected={isSelected === index} />\r\n                                    )\r\n                                }\r\n                            </ul>\r\n                }\r\n            </nav>\r\n                {\r\n                    isOpen &&\r\n                        <div className=\"modal\"></div>\r\n                }\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Nav;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}