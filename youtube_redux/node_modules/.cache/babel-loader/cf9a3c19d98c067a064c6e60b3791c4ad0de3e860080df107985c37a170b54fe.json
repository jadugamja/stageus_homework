{"ast":null,"code":"var _jsxFileName = \"C:\\\\Work\\\\Prj\\\\stageus_homework\\\\youtube_redux\\\\src\\\\components\\\\Nav\\\\Nav.Open.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { setSelectedMenu } from \"redux/action\";\nimport { fetchData } from \"utils/fetchData\";\nimport NavItem from \"./NavItem\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NavOpen = () => {\n  _s();\n  const dispatch = useDispatch();\n  const selectedMenu = useSelector(state => state.selectedMenu);\n\n  // 네비바 메뉴 클릭 이벤트\n  const clickMenuEvent = e => {\n    const clickedLi = e.target.nodeName === \"LI\" ? e.target : e.target.closest(\"li\") || e.target.querySelector(\"li\");\n    const idx = Array.from(e.currentTarget.querySelectorAll(\"li\")).indexOf(clickedLi);\n    dispatch(setSelectedMenu(idx));\n  };\n\n  // 열린 사이드 바 메뉴 목록\n  let [openMenuListsSet, setOpenMenuListsSet] = React.useState({});\n  React.useEffect(() => {\n    // 로컬 JSON 데이터 불러오기\n    fetchData(\"/data.json\", data => {\n      setOpenMenuListsSet(data.openMenuLists);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"nav-open\",\n      onClick: clickMenuEvent,\n      children: Object.values(openMenuListsSet).map((group, groupIndex) => {\n        return /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: [group.title !== \"\" && /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: group.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 59\n          }, this), Object.values(group.contents).map((menu, index) => /*#__PURE__*/_jsxDEV(NavItem, {\n            item: menu,\n            isSelected: selectedMenu === groupIndex * group.contents.length + index\n          }, `${groupIndex}-${index}`, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 41\n          }, this)), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 33\n          }, this)]\n        }, groupIndex, true, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 29\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"scroll\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n};\n_s(NavOpen, \"dRIzAkEd5qp1znjyBq/5Ix1/oKo=\", false, function () {\n  return [useDispatch, useSelector];\n});\n_c = NavOpen;\nexport default NavOpen;\nvar _c;\n$RefreshReg$(_c, \"NavOpen\");","map":{"version":3,"names":["React","useSelector","useDispatch","setSelectedMenu","fetchData","NavItem","jsxDEV","_jsxDEV","NavOpen","_s","dispatch","selectedMenu","state","clickMenuEvent","e","clickedLi","target","nodeName","closest","querySelector","idx","Array","from","currentTarget","querySelectorAll","indexOf","openMenuListsSet","setOpenMenuListsSet","useState","useEffect","data","openMenuLists","Fragment","children","className","onClick","Object","values","map","group","groupIndex","title","fileName","_jsxFileName","lineNumber","columnNumber","contents","menu","index","item","isSelected","length","_c","$RefreshReg$"],"sources":["C:/Work/Prj/stageus_homework/youtube_redux/src/components/Nav/Nav.Open.js"],"sourcesContent":["import React from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport{ setSelectedMenu } from \"redux/action\";\r\n\r\nimport { fetchData } from \"utils/fetchData\";\r\nimport NavItem from \"./NavItem\";\r\n\r\nconst NavOpen = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const selectedMenu = useSelector(state => state.selectedMenu);\r\n\r\n    // 네비바 메뉴 클릭 이벤트\r\n    const clickMenuEvent = (e) => {\r\n        const clickedLi = e.target.nodeName === \"LI\" ? e.target : e.target.closest(\"li\") || e.target.querySelector(\"li\");\r\n        const idx = Array.from(e.currentTarget.querySelectorAll(\"li\")).indexOf(clickedLi);\r\n        dispatch(setSelectedMenu(idx));\r\n    }\r\n\r\n    // 열린 사이드 바 메뉴 목록\r\n    let [openMenuListsSet, setOpenMenuListsSet] = React.useState({});\r\n\r\n    React.useEffect(() => {\r\n        // 로컬 JSON 데이터 불러오기\r\n        fetchData(\"/data.json\", (data) => {\r\n            setOpenMenuListsSet(data.openMenuLists);\r\n        });\r\n\r\n    }, []);\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <div className=\"nav-open\" onClick={clickMenuEvent}>\r\n                {\r\n                    Object.values(openMenuListsSet).map((group, groupIndex) => {\r\n                        return (\r\n                            <ul key={groupIndex}>\r\n                                {\r\n                                    group.title !== \"\" && <h3>{group.title}</h3>\r\n                                }{\r\n                                    Object.values(group.contents).map((menu, index) => (\r\n                                        <NavItem key={`${groupIndex}-${index}`} item={menu} isSelected={selectedMenu === (groupIndex * group.contents.length + index)} />\r\n                                    ))\r\n                                }\r\n                                <hr />\r\n                            </ul>\r\n                        )\r\n                    })\r\n                }\r\n            </div>\r\n            <div className=\"scroll\"></div>\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nexport default NavOpen;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}