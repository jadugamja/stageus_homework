{"ast":null,"code":"var _jsxFileName = \"C:\\\\Work\\\\Prj\\\\stageus_homework\\\\src\\\\components\\\\Nav\\\\Nav.Closed.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { setSelectedMenu } from \"redux/action\";\nimport NavItem from \"./NavItem\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NavClosed = () => {\n  _s();\n  const dispatch = useDispatch();\n  const selectedMenu = useSelector(state => state.selectedMenu);\n\n  // 네비바 메뉴 클릭 이벤트\n  const clickMenuEvent = e => {\n    const clickedLi = e.target.nodeName === \"LI\" ? e.target : e.target.closest(\"li\") || e.target.querySelector(\"li\");\n    const idx = Array.from(e.currentTarget.querySelectorAll(\"li\")).indexOf(clickedLi);\n    dispatch(setSelectedMenu(idx));\n  };\n\n  // 닫힌 사이드 바 메뉴 목록\n  let [closedMenuListSet, setClosedMenuListSet] = React.useState([]);\n  React.useEffect(() => {\n    fetchData();\n  }, []);\n\n  // 로컬 JSON 데이터 불러오기\n  const fetchData = async () => {\n    try {\n      const response = await fetch('/data.json');\n      const data = await response.json();\n      setClosedMenuListSet(data.closedMenuList);\n    } catch (error) {\n      console.error('데이터를 불러오는 중 오류 발생: ', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    className: \"nav-closed\",\n    onClick: clickMenuEvent,\n    children: closedMenuListSet.map((item, index) => /*#__PURE__*/_jsxDEV(NavItem, {\n      item: item,\n      selectedMenu: selectedMenu === index\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 21\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);\n};\n_s(NavClosed, \"B+S+mb+wahhRuY+cOk0vJsisLck=\", false, function () {\n  return [useDispatch, useSelector];\n});\n_c = NavClosed;\nexport default NavClosed;\nvar _c;\n$RefreshReg$(_c, \"NavClosed\");","map":{"version":3,"names":["React","useSelector","useDispatch","setSelectedMenu","NavItem","jsxDEV","_jsxDEV","NavClosed","_s","dispatch","selectedMenu","state","clickMenuEvent","e","clickedLi","target","nodeName","closest","querySelector","idx","Array","from","currentTarget","querySelectorAll","indexOf","closedMenuListSet","setClosedMenuListSet","useState","useEffect","fetchData","response","fetch","data","json","closedMenuList","error","console","className","onClick","children","map","item","index","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Work/Prj/stageus_homework/src/components/Nav/Nav.Closed.js"],"sourcesContent":["import React from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport{ setSelectedMenu } from \"redux/action\";\r\n\r\n\r\nimport NavItem from \"./NavItem\";\r\n\r\nconst NavClosed = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const selectedMenu = useSelector(state => state.selectedMenu);\r\n\r\n    // 네비바 메뉴 클릭 이벤트\r\n    const clickMenuEvent = (e) => {\r\n        const clickedLi = e.target.nodeName === \"LI\" ? e.target : e.target.closest(\"li\") || e.target.querySelector(\"li\");\r\n        const idx = Array.from(e.currentTarget.querySelectorAll(\"li\")).indexOf(clickedLi);\r\n        dispatch(setSelectedMenu(idx));\r\n    }\r\n\r\n    // 닫힌 사이드 바 메뉴 목록\r\n    let [closedMenuListSet, setClosedMenuListSet] = React.useState([]);\r\n\r\n    React.useEffect(() => {\r\n        fetchData();\r\n    }, []);\r\n\r\n    // 로컬 JSON 데이터 불러오기\r\n    const fetchData = async () => {\r\n        try {\r\n            const response = await fetch('/data.json');\r\n            const data = await response.json();\r\n            setClosedMenuListSet(data.closedMenuList);\r\n        } catch (error) {\r\n            console.error('데이터를 불러오는 중 오류 발생: ', error);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <ul className=\"nav-closed\" onClick={clickMenuEvent}>\r\n            {\r\n                closedMenuListSet.map((item, index) => \r\n                    <NavItem key={index} item={item} selectedMenu={selectedMenu === index} />\r\n                )\r\n            }\r\n        </ul>\r\n    );\r\n}\r\n\r\nexport default NavClosed;"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAAQC,eAAe,QAAQ,cAAc;AAG7C,OAAOC,OAAO,MAAM,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhC,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAEpB,MAAMC,QAAQ,GAAGP,WAAW,CAAC,CAAC;EAC9B,MAAMQ,YAAY,GAAGT,WAAW,CAACU,KAAK,IAAIA,KAAK,CAACD,YAAY,CAAC;;EAE7D;EACA,MAAME,cAAc,GAAIC,CAAC,IAAK;IAC1B,MAAMC,SAAS,GAAGD,CAAC,CAACE,MAAM,CAACC,QAAQ,KAAK,IAAI,GAAGH,CAAC,CAACE,MAAM,GAAGF,CAAC,CAACE,MAAM,CAACE,OAAO,CAAC,IAAI,CAAC,IAAIJ,CAAC,CAACE,MAAM,CAACG,aAAa,CAAC,IAAI,CAAC;IAChH,MAAMC,GAAG,GAAGC,KAAK,CAACC,IAAI,CAACR,CAAC,CAACS,aAAa,CAACC,gBAAgB,CAAC,IAAI,CAAC,CAAC,CAACC,OAAO,CAACV,SAAS,CAAC;IACjFL,QAAQ,CAACN,eAAe,CAACgB,GAAG,CAAC,CAAC;EAClC,CAAC;;EAED;EACA,IAAI,CAACM,iBAAiB,EAAEC,oBAAoB,CAAC,GAAG1B,KAAK,CAAC2B,QAAQ,CAAC,EAAE,CAAC;EAElE3B,KAAK,CAAC4B,SAAS,CAAC,MAAM;IAClBC,SAAS,CAAC,CAAC;EACf,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAMA,SAAS,GAAG,MAAAA,CAAA,KAAY;IAC1B,IAAI;MACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,YAAY,CAAC;MAC1C,MAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;MAClCP,oBAAoB,CAACM,IAAI,CAACE,cAAc,CAAC;IAC7C,CAAC,CAAC,OAAOC,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAAC;IAC/C;EACJ,CAAC;EAED,oBACI7B,OAAA;IAAI+B,SAAS,EAAC,YAAY;IAACC,OAAO,EAAE1B,cAAe;IAAA2B,QAAA,EAE3Cd,iBAAiB,CAACe,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,kBAC9BpC,OAAA,CAACF,OAAO;MAAaqC,IAAI,EAAEA,IAAK;MAAC/B,YAAY,EAAEA,YAAY,KAAKgC;IAAM,GAAxDA,KAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAqD,CAC5E;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEL,CAAC;AAEb,CAAC;AAAAtC,EAAA,CAvCKD,SAAS;EAAA,QAEML,WAAW,EACPD,WAAW;AAAA;AAAA8C,EAAA,GAH9BxC,SAAS;AAyCf,eAAeA,SAAS;AAAC,IAAAwC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}