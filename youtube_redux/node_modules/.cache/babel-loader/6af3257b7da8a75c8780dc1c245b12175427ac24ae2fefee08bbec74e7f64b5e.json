{"ast":null,"code":"var _jsxFileName = \"C:\\\\Work\\\\Prj\\\\stageus_homework\\\\src\\\\components\\\\Nav\\\\Nav.Open.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport NavItem from \"./NavItem\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NavOpen = ({\n  isSelected,\n  setIsSelected\n}) => {\n  _s();\n  // 열린 사이드 바 메뉴 목록\n  let [openMenuListsSet, setOpenMenuListsSet] = React.useState({});\n\n  // 메뉴 선택 여부\n  React.useEffect(() => {\n    fetchData();\n  }, []);\n\n  // 로컬 JSON 데이터 불러오기\n  const fetchData = async () => {\n    try {\n      const response = await fetch('/data.json');\n      const data = await response.json();\n      setOpenMenuListsSet(data.openMenuLists);\n    } catch (error) {\n      console.error('데이터를 불러오는 중 오류 발생: ', error);\n    }\n  };\n\n  // 네비바 항목 선택 및 클릭 이벤트\n  const clickNavItemEvent = e => {\n    switch (e.target.key) {\n      case \"open-menu-1\":\n        setIsSelected(1);\n        break;\n      case \"open-menu-2\":\n        setIsSelected(2);\n        break;\n      case \"open-menu-3\":\n        setIsSelected(3);\n        break;\n      case \"open-menu-4\":\n        setIsSelected(4);\n        break;\n      case \"open-menu-5\":\n        setIsSelected(5);\n        break;\n      case \"open-menu-6\":\n        setIsSelected(6);\n        break;\n      case \"open-menu-7\":\n        setIsSelected(7);\n        break;\n      case \"open-menu-8\":\n        setIsSelected(8);\n        break;\n      case \"open-menu-9\":\n        setIsSelected(9);\n        break;\n      case \"open-menu-10\":\n        setIsSelected(10);\n        break;\n      case \"open-menu-11\":\n        setIsSelected(11);\n        break;\n      case \"open-menu-12\":\n        setIsSelected(12);\n        break;\n      case \"open-menu-13\":\n        setIsSelected(13);\n        break;\n      case \"open-menu-14\":\n        setIsSelected(14);\n        break;\n      case \"open-menu-15\":\n        setIsSelected(15);\n        break;\n      default:\n        setIsSelected(0);\n        break;\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"nav-open\",\n      onClick: clickNavItemEvent,\n      children: Object.values(openMenuListsSet).map((group, groupIndex) => {\n        return /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"active\",\n          children: [group.title !== \"\" && /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: group.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 59\n          }, this), Object.values(group.contents).map((menu, index) => /*#__PURE__*/_jsxDEV(NavItem, {\n            item: menu,\n            isSelected: isSelected === index\n          }, `open-menu-${index}`, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 41\n          }, this)), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 33\n          }, this)]\n        }, groupIndex, true, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 29\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"scroll\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 9\n  }, this);\n};\n_s(NavOpen, \"fTbqU3yV74tWrYcTkRmlw4a+O0k=\");\n_c = NavOpen;\nexport default NavOpen;\nvar _c;\n$RefreshReg$(_c, \"NavOpen\");","map":{"version":3,"names":["React","NavItem","jsxDEV","_jsxDEV","NavOpen","isSelected","setIsSelected","_s","openMenuListsSet","setOpenMenuListsSet","useState","useEffect","fetchData","response","fetch","data","json","openMenuLists","error","console","clickNavItemEvent","e","target","key","Fragment","children","className","onClick","Object","values","map","group","groupIndex","title","fileName","_jsxFileName","lineNumber","columnNumber","contents","menu","index","item","_c","$RefreshReg$"],"sources":["C:/Work/Prj/stageus_homework/src/components/Nav/Nav.Open.js"],"sourcesContent":["import React from \"react\";\r\nimport NavItem from \"./NavItem\";\r\n\r\nconst NavOpen = ({isSelected, setIsSelected}) => {\r\n\r\n    // 열린 사이드 바 메뉴 목록\r\n    let [openMenuListsSet, setOpenMenuListsSet] = React.useState({});\r\n\r\n    // 메뉴 선택 여부\r\n    React.useEffect(() => {\r\n        fetchData();\r\n    }, []);\r\n\r\n    // 로컬 JSON 데이터 불러오기\r\n    const fetchData = async () => {\r\n        try {\r\n            const response = await fetch('/data.json');\r\n            const data = await response.json();\r\n            setOpenMenuListsSet(data.openMenuLists);\r\n        } catch (error) {\r\n            console.error('데이터를 불러오는 중 오류 발생: ', error);\r\n        }\r\n    };\r\n\r\n    // 네비바 항목 선택 및 클릭 이벤트\r\n    const clickNavItemEvent = (e) => {\r\n        switch (e.target.key) {\r\n            case \"open-menu-1\":\r\n                setIsSelected(1);\r\n                break;\r\n            case \"open-menu-2\":\r\n                setIsSelected(2);\r\n                break;\r\n            case \"open-menu-3\":\r\n                setIsSelected(3);\r\n                break;\r\n            case \"open-menu-4\":\r\n                setIsSelected(4);\r\n                break;\r\n            case \"open-menu-5\":\r\n                setIsSelected(5);\r\n                break;\r\n            case \"open-menu-6\":\r\n                setIsSelected(6);\r\n                break;\r\n            case \"open-menu-7\":\r\n                setIsSelected(7);\r\n                break;\r\n            case \"open-menu-8\":\r\n                setIsSelected(8);\r\n                break;\r\n            case \"open-menu-9\":\r\n                setIsSelected(9);\r\n                break;\r\n            case \"open-menu-10\":\r\n                setIsSelected(10);\r\n                break;\r\n            case \"open-menu-11\":\r\n                setIsSelected(11);\r\n                break;\r\n            case \"open-menu-12\":\r\n                setIsSelected(12);\r\n                break;\r\n            case \"open-menu-13\":\r\n                setIsSelected(13);\r\n                break;\r\n            case \"open-menu-14\":\r\n                setIsSelected(14);\r\n                break;\r\n            case \"open-menu-15\":\r\n                setIsSelected(15);\r\n                break;\r\n            default:\r\n                setIsSelected(0);\r\n                break;\r\n        }\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <div className=\"nav-open\" onClick={clickNavItemEvent}>\r\n                {\r\n                    Object.values(openMenuListsSet).map((group, groupIndex) => {\r\n                        return (\r\n                            <ul className=\"active\" key={groupIndex}>\r\n                                {\r\n                                    group.title !== \"\" && <h3>{group.title}</h3>\r\n                                }{\r\n                                    Object.values(group.contents).map((menu, index) => (\r\n                                        <NavItem key={`open-menu-${index}`} item={menu} isSelected={isSelected === index} />\r\n                                    ))\r\n                                }\r\n                                <hr />\r\n                            </ul>\r\n                        )\r\n                    })\r\n                }\r\n            </div>\r\n            <div className=\"scroll\"></div>\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nexport default NavOpen;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}