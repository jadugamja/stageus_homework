{"ast":null,"code":"var _jsxFileName = \"C:\\\\Work\\\\Prj\\\\stageus_homework\\\\youtube_recoil\\\\src\\\\components\\\\Nav\\\\Nav.Closed.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\n// import { useSelector, useDispatch } from \"react-redux\";\n// import{ setSelectedMenu } from \"redux/action\";\nimport { useSetRecoilState } from \"recoil\";\nimport { fetchData } from \"utils/fetchData\";\nimport NavItem from \"./NavItem\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NavClosed = () => {\n  _s();\n  // const dispatch = useDispatch();\n  // const selectedMenu = useSelector(state => state.selectedMenu);\n\n  // 네비바 메뉴 클릭 이벤트\n  const clickMenuEvent = e => {\n    const clickedLi = e.target.nodeName === \"LI\" ? e.target : e.target.closest(\"li\") || e.target.querySelector(\"li\");\n    const idx = Array.from(e.currentTarget.querySelectorAll(\"li\")).indexOf(clickedLi);\n    // dispatch(setSelectedMenu(idx));\n  };\n\n  // 닫힌 사이드 바 메뉴 목록\n  let [closedMenuListSet, setClosedMenuListSet] = React.useState([]);\n  React.useEffect(() => {\n    // 로컬 JSON 데이터 불러오기\n    fetchData(\"/data.json\", data => {\n      setClosedMenuListSet(data.closedMenuList);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    className: \"nav-closed\",\n    onClick: clickMenuEvent,\n    children: closedMenuListSet.map((item, index) => /*#__PURE__*/_jsxDEV(NavItem, {\n      item: item,\n      isSelected: selectedMenu === index\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 21\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n};\n_s(NavClosed, \"OmCE9gkbBRZSwvXAThSx0mS9uTM=\");\n_c = NavClosed;\nexport default NavClosed;\nvar _c;\n$RefreshReg$(_c, \"NavClosed\");","map":{"version":3,"names":["React","useSetRecoilState","fetchData","NavItem","jsxDEV","_jsxDEV","NavClosed","_s","clickMenuEvent","e","clickedLi","target","nodeName","closest","querySelector","idx","Array","from","currentTarget","querySelectorAll","indexOf","closedMenuListSet","setClosedMenuListSet","useState","useEffect","data","closedMenuList","className","onClick","children","map","item","index","isSelected","selectedMenu","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Work/Prj/stageus_homework/youtube_recoil/src/components/Nav/Nav.Closed.js"],"sourcesContent":["import React from \"react\";\r\n// import { useSelector, useDispatch } from \"react-redux\";\r\n// import{ setSelectedMenu } from \"redux/action\";\r\nimport { useSetRecoilState } from \"recoil\";\r\n\r\nimport { fetchData } from \"utils/fetchData\";\r\nimport NavItem from \"./NavItem\";\r\n\r\nconst NavClosed = () => {\r\n\r\n    // const dispatch = useDispatch();\r\n    // const selectedMenu = useSelector(state => state.selectedMenu);\r\n\r\n    // 네비바 메뉴 클릭 이벤트\r\n    const clickMenuEvent = (e) => {\r\n        const clickedLi = e.target.nodeName === \"LI\" ? e.target : e.target.closest(\"li\") || e.target.querySelector(\"li\");\r\n        const idx = Array.from(e.currentTarget.querySelectorAll(\"li\")).indexOf(clickedLi);\r\n        // dispatch(setSelectedMenu(idx));\r\n    }\r\n\r\n    // 닫힌 사이드 바 메뉴 목록\r\n    let [closedMenuListSet, setClosedMenuListSet] = React.useState([]);\r\n\r\n    React.useEffect(() => {\r\n        // 로컬 JSON 데이터 불러오기\r\n        fetchData(\"/data.json\", (data) => {\r\n            setClosedMenuListSet(data.closedMenuList);\r\n        });\r\n    }, []);\r\n\r\n\r\n    return (\r\n        <ul className=\"nav-closed\" onClick={clickMenuEvent}>\r\n            {\r\n                closedMenuListSet.map((item, index) => \r\n                    <NavItem key={index} item={item} isSelected={selectedMenu === index} />\r\n                )\r\n            }\r\n        </ul>\r\n    );\r\n}\r\n\r\nexport default NavClosed;"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB;AACA;AACA,SAASC,iBAAiB,QAAQ,QAAQ;AAE1C,SAASC,SAAS,QAAQ,iBAAiB;AAC3C,OAAOC,OAAO,MAAM,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhC,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAEpB;EACA;;EAEA;EACA,MAAMC,cAAc,GAAIC,CAAC,IAAK;IAC1B,MAAMC,SAAS,GAAGD,CAAC,CAACE,MAAM,CAACC,QAAQ,KAAK,IAAI,GAAGH,CAAC,CAACE,MAAM,GAAGF,CAAC,CAACE,MAAM,CAACE,OAAO,CAAC,IAAI,CAAC,IAAIJ,CAAC,CAACE,MAAM,CAACG,aAAa,CAAC,IAAI,CAAC;IAChH,MAAMC,GAAG,GAAGC,KAAK,CAACC,IAAI,CAACR,CAAC,CAACS,aAAa,CAACC,gBAAgB,CAAC,IAAI,CAAC,CAAC,CAACC,OAAO,CAACV,SAAS,CAAC;IACjF;EACJ,CAAC;;EAED;EACA,IAAI,CAACW,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGtB,KAAK,CAACuB,QAAQ,CAAC,EAAE,CAAC;EAElEvB,KAAK,CAACwB,SAAS,CAAC,MAAM;IAClB;IACAtB,SAAS,CAAC,YAAY,EAAGuB,IAAI,IAAK;MAC9BH,oBAAoB,CAACG,IAAI,CAACC,cAAc,CAAC;IAC7C,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC;EAGN,oBACIrB,OAAA;IAAIsB,SAAS,EAAC,YAAY;IAACC,OAAO,EAAEpB,cAAe;IAAAqB,QAAA,EAE3CR,iBAAiB,CAACS,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,kBAC9B3B,OAAA,CAACF,OAAO;MAAa4B,IAAI,EAAEA,IAAK;MAACE,UAAU,EAAEC,YAAY,KAAKF;IAAM,GAAtDA,KAAK;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAmD,CAC1E;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEL,CAAC;AAEb,CAAC;AAAA/B,EAAA,CAhCKD,SAAS;AAAAiC,EAAA,GAATjC,SAAS;AAkCf,eAAeA,SAAS;AAAC,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}