{"ast":null,"code":"var _jsxFileName = \"C:\\\\Work\\\\Prj\\\\stageus_homework\\\\youtube_recoil\\\\src\\\\components\\\\Nav\\\\Nav.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useRecoilValue } from \"recoil\";\nimport styled from \"styled-components\";\nimport { isWideNavState } from \"recoil/atoms/mainAtom\";\nimport NavOpen from \"./Nav.Open\";\nimport NavClosed from \"./Nav.Closed\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StyledNav = styled.nav`\n    position: fixed;\n    z-index: 9;\n\n    height: 100%;\n    background: #fff;\n\n    ${props => {\n  if (props.wide) return ` width: 240px; margin-top: 0; `;else return \"margin-top: 56px;\";\n}}\n`;\n_c = StyledNav;\nconst Modal = styled.div`\n    position: fixed;\n    z-index: 3;\n    left: 0;\n    top: 0;\n    width: 100%;\n    height: 100%;\n    overflow: auto;\n    background-color: rgba(0, 0, 0, 0.5);\n`;\n_c2 = Modal;\nconst Nav = () => {\n  _s();\n  // 네비바 열림/닫힘 여부\n  const isWideNav = useRecoilValue(isWideNavState);\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(StyledNav, {\n      wide: isWideNav,\n      children: !isWideNav ? /*#__PURE__*/_jsxDEV(NavClosed, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 27\n      }, this) : /*#__PURE__*/_jsxDEV(NavOpen, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 27\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this), isWideNav && /*#__PURE__*/_jsxDEV(Modal, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 34\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }, this);\n};\n_s(Nav, \"76OMvDSokIEd2K32nEERLYzFiyc=\", false, function () {\n  return [useRecoilValue];\n});\n_c3 = Nav;\nexport default Nav;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"StyledNav\");\n$RefreshReg$(_c2, \"Modal\");\n$RefreshReg$(_c3, \"Nav\");","map":{"version":3,"names":["React","useRecoilValue","styled","isWideNavState","NavOpen","NavClosed","jsxDEV","_jsxDEV","StyledNav","nav","props","wide","_c","Modal","div","_c2","Nav","_s","isWideNav","Fragment","children","fileName","_jsxFileName","lineNumber","columnNumber","_c3","$RefreshReg$"],"sources":["C:/Work/Prj/stageus_homework/youtube_recoil/src/components/Nav/Nav.js"],"sourcesContent":["import React from \"react\";\r\nimport { useRecoilValue } from \"recoil\";\r\nimport styled from \"styled-components\";\r\n\r\nimport { isWideNavState } from \"recoil/atoms/mainAtom\";\r\nimport NavOpen from \"./Nav.Open\";\r\nimport NavClosed from \"./Nav.Closed\";\r\n\r\nconst StyledNav = styled.nav`\r\n    position: fixed;\r\n    z-index: 9;\r\n\r\n    height: 100%;\r\n    background: #fff;\r\n\r\n    ${props => {\r\n        if (props.wide)\r\n            return ` width: 240px; margin-top: 0; `\r\n        else \r\n            return \"margin-top: 56px;\"\r\n    }}\r\n`;\r\n\r\nconst Modal = styled.div`\r\n    position: fixed;\r\n    z-index: 3;\r\n    left: 0;\r\n    top: 0;\r\n    width: 100%;\r\n    height: 100%;\r\n    overflow: auto;\r\n    background-color: rgba(0, 0, 0, 0.5);\r\n`;\r\n\r\nconst Nav = () => {\r\n\r\n    // 네비바 열림/닫힘 여부\r\n    const isWideNav = useRecoilValue(isWideNavState);\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <StyledNav wide={isWideNav}>\r\n                {\r\n                    !isWideNav\r\n                        ? <NavClosed />\r\n                        : <NavOpen />\r\n                }\r\n            </StyledNav>\r\n                {\r\n                    isWideNav && <Modal></Modal>\r\n                }\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nexport default Nav;"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,cAAc,QAAQ,QAAQ;AACvC,OAAOC,MAAM,MAAM,mBAAmB;AAEtC,SAASC,cAAc,QAAQ,uBAAuB;AACtD,OAAOC,OAAO,MAAM,YAAY;AAChC,OAAOC,SAAS,MAAM,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErC,MAAMC,SAAS,GAAGN,MAAM,CAACO,GAAI;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA,MAAMC,KAAK,IAAI;EACP,IAAIA,KAAK,CAACC,IAAI,EACV,OAAQ,gCAA+B,MAEvC,OAAO,mBAAmB;AAClC,CAAE;AACN,CAAC;AAACC,EAAA,GAbIJ,SAAS;AAef,MAAMK,KAAK,GAAGX,MAAM,CAACY,GAAI;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACC,GAAA,GATIF,KAAK;AAWX,MAAMG,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAEd;EACA,MAAMC,SAAS,GAAGjB,cAAc,CAACE,cAAc,CAAC;EAEhD,oBACII,OAAA,CAACP,KAAK,CAACmB,QAAQ;IAAAC,QAAA,gBACXb,OAAA,CAACC,SAAS;MAACG,IAAI,EAAEO,SAAU;MAAAE,QAAA,EAEnB,CAACF,SAAS,gBACJX,OAAA,CAACF,SAAS;QAAAgB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,gBACbjB,OAAA,CAACH,OAAO;QAAAiB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEd,CAAC,EAEJN,SAAS,iBAAIX,OAAA,CAACM,KAAK;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAExB,CAAC;AAEzB,CAAC;AAAAP,EAAA,CAnBKD,GAAG;EAAA,QAGaf,cAAc;AAAA;AAAAwB,GAAA,GAH9BT,GAAG;AAqBT,eAAeA,GAAG;AAAC,IAAAJ,EAAA,EAAAG,GAAA,EAAAU,GAAA;AAAAC,YAAA,CAAAd,EAAA;AAAAc,YAAA,CAAAX,GAAA;AAAAW,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}