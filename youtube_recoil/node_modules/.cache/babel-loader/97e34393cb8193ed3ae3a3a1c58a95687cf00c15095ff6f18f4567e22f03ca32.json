{"ast":null,"code":"var _jsxFileName = \"C:\\\\Work\\\\Prj\\\\stageus_homework\\\\youtube_recoil\\\\src\\\\components\\\\Main\\\\MainHome.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { useRecoilState } from \"recoil\";\nimport { selectedKeywordState, videoKeywordsState } from \"recoil/atoms/mainAtom\";\nimport MainHomeItem from \"./MainHomeItem\";\nimport videoSet from \"db/videoSet.json\";\nimport { fetchData } from \"utils/fetchData\";\nimport { HomeMain, VideoKeywordsContainerDiv, KeywordsBoxDiv, KeywordsDiv, KeywordsSpan, VideoContentContainerDiv } from \"./MainHomeStyle.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MainHome = () => {\n  _s();\n  // 스크롤이 문서 최하단에 위치한 횟수\n  const [isScrolledDown, setIsScrolledDown] = useState(0);\n  // 영상 정보\n  const [videoContent, setVideoContent] = useState(videoSet.slice(isScrolledDown, isScrolledDown + 16));\n  // 영상 키워드 정보\n  const [videoKeywords, setVideoKeywords] = useRecoilState(videoKeywordsState);\n  // 선택된 키워드\n  const [selectedKeyword, setSelectedKeyword] = useRecoilState(selectedKeywordState);\n\n  // 선택 키워드 및 클릭 이벤트\n  const clickKeywordButtonEvent = idx => setSelectedKeyword(idx);\n\n  // 스크롤 문서 최하단 위치 시 콘텐츠 추가 이벤트\n  const scrollDownToNextContentEvent = () => {\n    const root = document.getElementById(\"root\");\n    let scrollTop = window.pageYOffset || root.scrollTop; // 현재 스크롤 위치\n    let documentHeight = Math.max(document.body.scrollHeight, document.body.offsetHeight, root.clientHeight, root.scrollHeight, root.offsetHeight); // 문서의 전체 높이\n    let windowHeight = window.innerHeight || root.clientHeight || document.body.clientHeight; // 뷰포트의 높이\n\n    // 스크롤 위치가 문서 최하단에 닿았을 때\n    if (scrollTop + windowHeight >= documentHeight) {\n      const nextData = videoSet.slice((isScrolledDown + 1) * 16, (isScrolledDown + 2) * 16);\n      setIsScrolledDown(prevIsScrolledDown => prevIsScrolledDown + 1);\n      setVideoContent(prevVideoContent => [...prevVideoContent, ...nextData]);\n    }\n  };\n  React.useEffect(() => {\n    fetchData(\"/data.json\", data => setVideoKeywords(data.keywords));\n\n    // isScrolledDown의 상태가 변화할 때마다 이벤트 핸들러 호출\n    window.addEventListener(\"scroll\", scrollDownToNextContentEvent, true);\n\n    // 컴포넌트 언마운트 시, 이벤트 리스너 제거\n    return () => window.removeEventListener(\"scroll\", scrollDownToNextContentEvent);\n  }, [isScrolledDown]);\n  return /*#__PURE__*/_jsxDEV(HomeMain, {\n    children: [/*#__PURE__*/_jsxDEV(VideoKeywordsContainerDiv, {\n      col: \"center\",\n      children: /*#__PURE__*/_jsxDEV(KeywordsBoxDiv, {\n        col: \"center\",\n        children: videoKeywords.map((item, index) => {\n          return /*#__PURE__*/_jsxDEV(KeywordsDiv, {\n            row: \"center\",\n            onClick: () => {\n              clickKeywordButtonEvent(index);\n            },\n            active: selectedKeyword === index,\n            idx: index,\n            value: item.value,\n            children: /*#__PURE__*/_jsxDEV(KeywordsSpan, {\n              children: item.key\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 37\n            }, this)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 33\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(VideoContentContainerDiv, {\n      children: videoContent.map((item, index) => {\n        return /*#__PURE__*/_jsxDEV(MainHomeItem, {\n          item: item,\n          idx: index\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 32\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 9\n  }, this);\n};\n_s(MainHome, \"+uHkCi6G+s8o3Rb5d5SFxUVf+lc=\", false, function () {\n  return [useRecoilState, useRecoilState];\n});\n_c = MainHome;\nexport default MainHome;\nvar _c;\n$RefreshReg$(_c, \"MainHome\");","map":{"version":3,"names":["React","useState","useRecoilState","selectedKeywordState","videoKeywordsState","MainHomeItem","videoSet","fetchData","HomeMain","VideoKeywordsContainerDiv","KeywordsBoxDiv","KeywordsDiv","KeywordsSpan","VideoContentContainerDiv","jsxDEV","_jsxDEV","MainHome","_s","isScrolledDown","setIsScrolledDown","videoContent","setVideoContent","slice","videoKeywords","setVideoKeywords","selectedKeyword","setSelectedKeyword","clickKeywordButtonEvent","idx","scrollDownToNextContentEvent","root","document","getElementById","scrollTop","window","pageYOffset","documentHeight","Math","max","body","scrollHeight","offsetHeight","clientHeight","windowHeight","innerHeight","nextData","prevIsScrolledDown","prevVideoContent","useEffect","data","keywords","addEventListener","removeEventListener","children","col","map","item","index","row","onClick","active","value","key","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Work/Prj/stageus_homework/youtube_recoil/src/components/Main/MainHome.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { useRecoilState } from \"recoil\";\r\n\r\nimport { selectedKeywordState, videoKeywordsState } from \"recoil/atoms/mainAtom\";\r\nimport MainHomeItem from \"./MainHomeItem\";\r\nimport videoSet from \"db/videoSet.json\";\r\nimport { fetchData } from \"utils/fetchData\";\r\nimport { HomeMain, VideoKeywordsContainerDiv, KeywordsBoxDiv, KeywordsDiv, KeywordsSpan, VideoContentContainerDiv } from \"./MainHomeStyle.js\";\r\n\r\nconst MainHome = () => {\r\n\r\n    // 스크롤이 문서 최하단에 위치한 횟수\r\n    const [isScrolledDown, setIsScrolledDown] = useState(0);\r\n    // 영상 정보\r\n    const [videoContent, setVideoContent] = useState(videoSet.slice(isScrolledDown, isScrolledDown + 16));\r\n    // 영상 키워드 정보\r\n    const [videoKeywords, setVideoKeywords] = useRecoilState(videoKeywordsState);\r\n    // 선택된 키워드\r\n    const [selectedKeyword, setSelectedKeyword] = useRecoilState(selectedKeywordState);\r\n\r\n    // 선택 키워드 및 클릭 이벤트\r\n    const clickKeywordButtonEvent = (idx) => setSelectedKeyword(idx);\r\n    \r\n    // 스크롤 문서 최하단 위치 시 콘텐츠 추가 이벤트\r\n    const scrollDownToNextContentEvent = () => {\r\n        const root = document.getElementById(\"root\");\r\n        let scrollTop = window.pageYOffset || root.scrollTop;   // 현재 스크롤 위치\r\n        let documentHeight = Math.max(document.body.scrollHeight, document.body.offsetHeight, root.clientHeight, root.scrollHeight, root.offsetHeight\r\n        );  // 문서의 전체 높이\r\n        let windowHeight = window.innerHeight || root.clientHeight || document.body.clientHeight; // 뷰포트의 높이\r\n\r\n        // 스크롤 위치가 문서 최하단에 닿았을 때\r\n        if (scrollTop + windowHeight >= documentHeight) {\r\n            const nextData = videoSet.slice((isScrolledDown + 1) * 16, (isScrolledDown + 2) * 16);\r\n            setIsScrolledDown(prevIsScrolledDown => prevIsScrolledDown + 1);\r\n            setVideoContent( prevVideoContent => [...prevVideoContent, ...nextData] );\r\n        }\r\n    }\r\n\r\n    React.useEffect(() => {\r\n\r\n        fetchData(\"/data.json\", (data) => setVideoKeywords(data.keywords));\r\n    \r\n        // isScrolledDown의 상태가 변화할 때마다 이벤트 핸들러 호출\r\n        window.addEventListener(\"scroll\", scrollDownToNextContentEvent, true);\r\n\r\n        // 컴포넌트 언마운트 시, 이벤트 리스너 제거\r\n        return () => \r\n            window.removeEventListener(\"scroll\", scrollDownToNextContentEvent);\r\n\r\n    }, [isScrolledDown]);\r\n\r\n    return (\r\n        <HomeMain>\r\n            <VideoKeywordsContainerDiv col=\"center\">\r\n                <KeywordsBoxDiv col=\"center\">\r\n                    {\r\n                        videoKeywords.map((item, index) => {\r\n                            return (\r\n                                <KeywordsDiv row=\"center\" onClick={() => {clickKeywordButtonEvent(index)}} active={selectedKeyword === index} key={index} idx={index} value={item.value}>\r\n                                    <KeywordsSpan>{item.key}</KeywordsSpan>\r\n                                </KeywordsDiv>\r\n                            )\r\n                        })\r\n                    }\r\n                </KeywordsBoxDiv>\r\n            </VideoKeywordsContainerDiv>\r\n            <VideoContentContainerDiv>\r\n                {\r\n                    videoContent.map((item, index) => {\r\n                        return <MainHomeItem item={item} idx={index} key={index} />\r\n                    })\r\n                }\r\n            </VideoContentContainerDiv>\r\n        </HomeMain>\r\n    );\r\n}\r\n\r\nexport default MainHome;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}