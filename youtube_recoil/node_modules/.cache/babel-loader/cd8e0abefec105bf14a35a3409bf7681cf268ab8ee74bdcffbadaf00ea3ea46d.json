{"ast":null,"code":"var _jsxFileName = \"C:\\\\Work\\\\Prj\\\\stageus_homework\\\\src\\\\components\\\\Nav\\\\Nav.Closed.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport NavItem from \"./NavItem\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NavClosed = ({\n  isSelected,\n  setIsSelected\n}) => {\n  _s();\n  // 닫힌 사이드 바 메뉴 목록\n  let [closedMenuListSet, setClosedMenuListSet] = React.useState([]);\n  React.useEffect(() => {\n    fetchData();\n  }, []);\n\n  // 로컬 JSON 데이터 불러오기\n  const fetchData = async () => {\n    try {\n      const response = await fetch('/data.json');\n      const data = await response.json();\n      setClosedMenuListSet(data.closedMenuListSet);\n    } catch (error) {\n      console.error('데이터를 불러오는 중 오류 발생: ', error);\n    }\n  };\n\n  // 네비바 항목 선택 및 클릭 이벤트\n  const clickNavItemEvent = idx => setIsSelected(idx);\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    className: \"nav-closed\",\n    children: closedMenuListSet.map((item, index) => /*#__PURE__*/_jsxDEV(NavItem, {\n      onClick: () => {\n        clickNavItemEvent(index);\n      },\n      item: item,\n      isSelected: isSelected === index\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 21\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n};\n_s(NavClosed, \"OmCE9gkbBRZSwvXAThSx0mS9uTM=\");\n_c = NavClosed;\nexport default NavClosed;\nvar _c;\n$RefreshReg$(_c, \"NavClosed\");","map":{"version":3,"names":["React","NavItem","jsxDEV","_jsxDEV","NavClosed","isSelected","setIsSelected","_s","closedMenuListSet","setClosedMenuListSet","useState","useEffect","fetchData","response","fetch","data","json","error","console","clickNavItemEvent","idx","className","children","map","item","index","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Work/Prj/stageus_homework/src/components/Nav/Nav.Closed.js"],"sourcesContent":["import React from \"react\";\r\nimport NavItem from \"./NavItem\";\r\n\r\nconst NavClosed = ({isSelected, setIsSelected}) => {\r\n\r\n    // 닫힌 사이드 바 메뉴 목록\r\n    let [closedMenuListSet, setClosedMenuListSet] = React.useState([]);\r\n\r\n    React.useEffect(() => {\r\n        fetchData();\r\n    }, []);\r\n\r\n    // 로컬 JSON 데이터 불러오기\r\n    const fetchData = async () => {\r\n        try {\r\n            const response = await fetch('/data.json');\r\n            const data = await response.json();\r\n            setClosedMenuListSet(data.closedMenuListSet);\r\n        } catch (error) {\r\n            console.error('데이터를 불러오는 중 오류 발생: ', error);\r\n        }\r\n    };\r\n\r\n\r\n    // 네비바 항목 선택 및 클릭 이벤트\r\n    const clickNavItemEvent = (idx) => setIsSelected(idx);\r\n\r\n    return (\r\n        <ul className=\"nav-closed\">\r\n            {\r\n                closedMenuListSet.map((item, index) => \r\n                    <NavItem onClick={() => {clickNavItemEvent(index)}} item={item} isSelected={isSelected === index} />\r\n                )\r\n            }\r\n        </ul>\r\n    );\r\n}\r\n\r\nexport default NavClosed;"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,OAAO,MAAM,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhC,MAAMC,SAAS,GAAGA,CAAC;EAACC,UAAU;EAAEC;AAAa,CAAC,KAAK;EAAAC,EAAA;EAE/C;EACA,IAAI,CAACC,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGT,KAAK,CAACU,QAAQ,CAAC,EAAE,CAAC;EAElEV,KAAK,CAACW,SAAS,CAAC,MAAM;IAClBC,SAAS,CAAC,CAAC;EACf,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAMA,SAAS,GAAG,MAAAA,CAAA,KAAY;IAC1B,IAAI;MACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,YAAY,CAAC;MAC1C,MAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;MAClCP,oBAAoB,CAACM,IAAI,CAACP,iBAAiB,CAAC;IAChD,CAAC,CAAC,OAAOS,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAAC;IAC/C;EACJ,CAAC;;EAGD;EACA,MAAME,iBAAiB,GAAIC,GAAG,IAAKd,aAAa,CAACc,GAAG,CAAC;EAErD,oBACIjB,OAAA;IAAIkB,SAAS,EAAC,YAAY;IAAAC,QAAA,EAElBd,iBAAiB,CAACe,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,kBAC9BtB,OAAA,CAACF,OAAO;MAACyB,OAAO,EAAEA,CAAA,KAAM;QAACP,iBAAiB,CAACM,KAAK,CAAC;MAAA,CAAE;MAACD,IAAI,EAAEA,IAAK;MAACnB,UAAU,EAAEA,UAAU,KAAKoB;IAAM;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CACvG;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEL,CAAC;AAEb,CAAC;AAAAvB,EAAA,CAjCKH,SAAS;AAAA2B,EAAA,GAAT3B,SAAS;AAmCf,eAAeA,SAAS;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}