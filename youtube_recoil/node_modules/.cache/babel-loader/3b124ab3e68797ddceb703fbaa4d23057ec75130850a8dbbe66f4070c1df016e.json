{"ast":null,"code":"var _jsxFileName = \"C:\\\\Work\\\\Prj\\\\stageus_homework\\\\youtube_recoil\\\\src\\\\components\\\\Nav\\\\Nav.Closed.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useRecoilState } from \"recoil\";\nimport { selectedMenuState } from \"recoil/atoms/mainAtom\";\nimport { fetchData } from \"utils/fetchData\";\nimport styled from \"styled-components\";\nimport NavItem from \"./NavItem\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ClosedUl = styled.ul`\n    position: fixed;\n    top: 52px;\n    width: 78px;\n\n    display: flex;\n    flex-flow: column nowrap;\n    justify-content: flex-start;\n    align-items: center;\n    padding: 0 4px;\n`;\n_c = ClosedUl;\nconst NavClosed = () => {\n  _s();\n  // 선택된 메뉴\n  const [selectedMenu, setSelectedMenu] = useRecoilState(selectedMenuState);\n\n  // 네비바 메뉴 클릭 이벤트\n  const clickMenuEvent = e => {\n    const clickedLi = e.target.nodeName === \"LI\" ? e.target : e.target.closest(\"li\") || e.target.querySelector(\"li\");\n    const idx = Array.from(e.currentTarget.querySelectorAll(\"li\")).indexOf(clickedLi);\n    setSelectedMenu(idx);\n  };\n\n  // 닫힌 사이드 바 메뉴 목록\n  let [closedMenuListSet, setClosedMenuListSet] = React.useState([]);\n  React.useEffect(() => {\n    // 닫힌 사이드 바 메뉴 목록 불러오기\n    fetchData(\"/data.json\", data => setClosedMenuListSet(data.closedMenuList));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(ClosedUl, {\n    onClick: clickMenuEvent,\n    children: closedMenuListSet.map((item, index) => /*#__PURE__*/_jsxDEV(NavItem, {\n      item: item,\n      isSelected: selectedMenu === index\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 21\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, this);\n};\n_s(NavClosed, \"rZq3y4PCjcDeFKeZsmqflAJHvAs=\", false, function () {\n  return [useRecoilState];\n});\n_c2 = NavClosed;\nexport default NavClosed;\nvar _c, _c2;\n$RefreshReg$(_c, \"ClosedUl\");\n$RefreshReg$(_c2, \"NavClosed\");","map":{"version":3,"names":["React","useRecoilState","selectedMenuState","fetchData","styled","NavItem","jsxDEV","_jsxDEV","ClosedUl","ul","_c","NavClosed","_s","selectedMenu","setSelectedMenu","clickMenuEvent","e","clickedLi","target","nodeName","closest","querySelector","idx","Array","from","currentTarget","querySelectorAll","indexOf","closedMenuListSet","setClosedMenuListSet","useState","useEffect","data","closedMenuList","onClick","children","map","item","index","isSelected","fileName","_jsxFileName","lineNumber","columnNumber","_c2","$RefreshReg$"],"sources":["C:/Work/Prj/stageus_homework/youtube_recoil/src/components/Nav/Nav.Closed.js"],"sourcesContent":["import React from \"react\";\r\nimport { useRecoilState } from \"recoil\";\r\nimport { selectedMenuState } from \"recoil/atoms/mainAtom\";\r\nimport { fetchData } from \"utils/fetchData\";\r\nimport styled from \"styled-components\";\r\n\r\nimport NavItem from \"./NavItem\";\r\n\r\nconst ClosedUl = styled.ul`\r\n    position: fixed;\r\n    top: 52px;\r\n    width: 78px;\r\n\r\n    display: flex;\r\n    flex-flow: column nowrap;\r\n    justify-content: flex-start;\r\n    align-items: center;\r\n    padding: 0 4px;\r\n`;\r\n\r\nconst NavClosed = () => {\r\n\r\n    // 선택된 메뉴\r\n    const [selectedMenu, setSelectedMenu] = useRecoilState(selectedMenuState);\r\n\r\n    // 네비바 메뉴 클릭 이벤트\r\n    const clickMenuEvent = (e) => {\r\n        const clickedLi = e.target.nodeName === \"LI\" ? e.target : e.target.closest(\"li\") || e.target.querySelector(\"li\");\r\n        const idx = Array.from(e.currentTarget.querySelectorAll(\"li\")).indexOf(clickedLi);\r\n        setSelectedMenu(idx);\r\n    }\r\n\r\n    // 닫힌 사이드 바 메뉴 목록\r\n    let [closedMenuListSet, setClosedMenuListSet] = React.useState([]);\r\n\r\n    React.useEffect(() => {\r\n        \r\n        // 닫힌 사이드 바 메뉴 목록 불러오기\r\n        fetchData(\"/data.json\", (data) => setClosedMenuListSet(data.closedMenuList));\r\n\r\n    }, []);\r\n\r\n    return (\r\n        <ClosedUl onClick={clickMenuEvent}>\r\n            {\r\n                closedMenuListSet.map((item, index) => \r\n                    <NavItem key={index} item={item} isSelected={selectedMenu === index} />\r\n                )\r\n            }\r\n        </ClosedUl>\r\n    );\r\n}\r\n\r\nexport default NavClosed;"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,cAAc,QAAQ,QAAQ;AACvC,SAASC,iBAAiB,QAAQ,uBAAuB;AACzD,SAASC,SAAS,QAAQ,iBAAiB;AAC3C,OAAOC,MAAM,MAAM,mBAAmB;AAEtC,OAAOC,OAAO,MAAM,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhC,MAAMC,QAAQ,GAAGJ,MAAM,CAACK,EAAG;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACC,EAAA,GAVIF,QAAQ;AAYd,MAAMG,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAEpB;EACA,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGb,cAAc,CAACC,iBAAiB,CAAC;;EAEzE;EACA,MAAMa,cAAc,GAAIC,CAAC,IAAK;IAC1B,MAAMC,SAAS,GAAGD,CAAC,CAACE,MAAM,CAACC,QAAQ,KAAK,IAAI,GAAGH,CAAC,CAACE,MAAM,GAAGF,CAAC,CAACE,MAAM,CAACE,OAAO,CAAC,IAAI,CAAC,IAAIJ,CAAC,CAACE,MAAM,CAACG,aAAa,CAAC,IAAI,CAAC;IAChH,MAAMC,GAAG,GAAGC,KAAK,CAACC,IAAI,CAACR,CAAC,CAACS,aAAa,CAACC,gBAAgB,CAAC,IAAI,CAAC,CAAC,CAACC,OAAO,CAACV,SAAS,CAAC;IACjFH,eAAe,CAACQ,GAAG,CAAC;EACxB,CAAC;;EAED;EACA,IAAI,CAACM,iBAAiB,EAAEC,oBAAoB,CAAC,GAAG7B,KAAK,CAAC8B,QAAQ,CAAC,EAAE,CAAC;EAElE9B,KAAK,CAAC+B,SAAS,CAAC,MAAM;IAElB;IACA5B,SAAS,CAAC,YAAY,EAAG6B,IAAI,IAAKH,oBAAoB,CAACG,IAAI,CAACC,cAAc,CAAC,CAAC;EAEhF,CAAC,EAAE,EAAE,CAAC;EAEN,oBACI1B,OAAA,CAACC,QAAQ;IAAC0B,OAAO,EAAEnB,cAAe;IAAAoB,QAAA,EAE1BP,iBAAiB,CAACQ,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,kBAC9B/B,OAAA,CAACF,OAAO;MAAagC,IAAI,EAAEA,IAAK;MAACE,UAAU,EAAE1B,YAAY,KAAKyB;IAAM,GAAtDA,KAAK;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAmD,CAC1E;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEC,CAAC;AAEnB,CAAC;AAAA/B,EAAA,CA/BKD,SAAS;EAAA,QAG6BV,cAAc;AAAA;AAAA2C,GAAA,GAHpDjC,SAAS;AAiCf,eAAeA,SAAS;AAAC,IAAAD,EAAA,EAAAkC,GAAA;AAAAC,YAAA,CAAAnC,EAAA;AAAAmC,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}